{
  "clear": {
    "path": "/nodes",
    "method": "delete",
    "arguments": [],
    "constants": {},
    "errors": {
      "access denied:reason": {
        "text": "reason: not allowed",
        "code": "403"
      }
    }
  },
  "getNodes": {
    "path": "/nodes",
    "method": "get",
    "arguments": [
      {
        "in": "query",
        "name": "user"
      },
      {
        "in": "query",
        "name": "idIn"
      },
      {
        "in": "query",
        "name": "idOut"
      },
      {
        "in": "query",
        "name": "idMin"
      },
      {
        "in": "query",
        "name": "idMax"
      },
      {
        "in": "query",
        "name": "classIn"
      },
      {
        "in": "query",
        "name": "classOut"
      },
      {
        "in": "query",
        "name": "titleLike"
      },
      {
        "in": "query",
        "name": "contentLike"
      },
      {
        "in": "query",
        "name": "relationsIn"
      },
      {
        "in": "query",
        "name": "relationsOut"
      },
      {
        "in": "query",
        "name": "responseFields"
      },
      {
        "in": "query",
        "name": "sort"
      },
      {
        "in": "query",
        "name": "limit"
      }
    ],
    "constants": {
      "flags": [
        "undefined"
      ]
    },
    "errors": {
      "access denied:read": {
        "text": "read: user has no right to read node",
        "code": "403"
      },
      "not found:node": {
        "text": "node: not found",
        "code": "404"
      },
      "not found:relation": {
        "text": "relation: node not found",
        "code": "404"
      },
      "invalid parameter:user": {
        "text": "user: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:idIn": {
        "text": "idIn: must be a string of integers joined with comma",
        "code": "422"
      },
      "invalid parameter:idOut": {
        "text": "idOut: must be a string of integers joined with comma",
        "code": "422"
      },
      "invalid parameter:idMin": {
        "text": "idMin: must be an integer",
        "code": "422"
      },
      "invalid parameter:idMax": {
        "text": "idMax: must be an integer",
        "code": "422"
      },
      "invalid parameter:classIn": {
        "text": "classIn: must be a string of words joined with comma",
        "code": "422"
      },
      "invalid parameter:classOut": {
        "text": "classOut: must be a string of words joined with comma",
        "code": "422"
      },
      "invalid parameter:titleLike": {
        "text": "titleLike: must be a string",
        "code": "422"
      },
      "invalid parameter:contentLike": {
        "text": "contentLike: must be a string",
        "code": "422"
      },
      "invalid parameter:relationsIn": {
        "text": "relationsIn: must be a string of 4-items (string,int,float,float) \"class,id,minValue,maxValue\"",
        "code": "422"
      },
      "invalid parameter:relationsOut": {
        "text": "relationsOut: must be a string of 4-items (string,int,float,float) \"class,id,minValue,maxValue\"",
        "code": "422"
      },
      "invalid parameter:responseFields": {
        "text": "responseFields: must be a string of array of Node fields names",
        "code": "422"
      },
      "invalid parameter:sort": {
        "text": "sort: must be a string: \"asc\" or \"desc\"",
        "code": "422"
      },
      "invalid parameter:limit": {
        "text": "limit: must be a positive integer",
        "code": "422"
      }
    }
  },
  "editNode": {
    "path": "/node/",
    "method": "post",
    "arguments": [
      {
        "in": "path",
        "name": "id"
      },
      {
        "in": "query",
        "name": "user"
      },
      {
        "in": "query",
        "name": "operation"
      },
      {
        "in": "body",
        "name": "class"
      },
      {
        "in": "body",
        "name": "title"
      },
      {
        "in": "body",
        "name": "ctype"
      },
      {
        "in": "body",
        "name": "content"
      },
      {
        "in": "body",
        "name": "flags"
      },
      {
        "in": "body",
        "name": "meta"
      },
      {
        "in": "body",
        "name": "relationsAdd"
      },
      {
        "in": "body",
        "name": "relationsRm"
      }
    ],
    "constants": {
      "operations": [
        "delete",
        "title",
        "content",
        "flags",
        "meta",
        "relations"
      ],
      "flags": [
        "undefined"
      ]
    },
    "errors": {
      "access denied:write": {
        "text": "write: user has no right to write",
        "code": "403"
      },
      "access denied:delete": {
        "text": "delete: user has no right to delete",
        "code": "403"
      },
      "access denied:relate": {
        "text": "relate: user has no right to relate",
        "code": "403"
      },
      "not found:node": {
        "text": "node: not found",
        "code": "404"
      },
      "not found:relation": {
        "text": "relation: node not found",
        "code": "404"
      },
      "invalid parameter:id": {
        "text": "id: must be a positive integer or empty string",
        "code": "422"
      },
      "invalid parameter:user": {
        "text": "user: must be a positive integer or empty string",
        "code": "422"
      },
      "invalid parameter:operation": {
        "text": "operation: must be an integer",
        "code": "422"
      },
      "invalid parameter:class": {
        "text": "class: must be a string",
        "code": "422"
      },
      "invalid parameter:title": {
        "text": "title: must be a string",
        "code": "422"
      },
      "invalid parameter:ctype": {
        "text": "ctype: must be a string",
        "code": "422"
      },
      "invalid parameter:content": {
        "text": "content: must be a string",
        "code": "422"
      },
      "invalid parameter:flags": {
        "text": "flags: must be an integer",
        "code": "422"
      },
      "invalid parameter:meta": {
        "text": "meta: must be a string of valid JSON",
        "code": "422"
      },
      "invalid parameter:relationsAdd or relationsRm": {
        "text": "relationsAdd or relationsRm: must not be empty",
        "code": "422"
      },
      "invalid parameter:relationsAdd": {
        "text": "relationsAdd: must be a string of array of 3-items (int,float,float) \"id,localTitle,localValue\"",
        "code": "422"
      },
      "invalid parameter:relationsRm": {
        "text": "relationsRm: must be a string of integers \"id1,id2,..\"",
        "code": "422"
      }
    }
  },
  "getAccess": {
    "path": "/access",
    "method": "get",
    "arguments": [
      {
        "in": "query",
        "name": "user"
      },
      {
        "in": "query",
        "name": "idA"
      },
      {
        "in": "query",
        "name": "idB"
      }
    ],
    "constants": {
      "rights": [
        "read",
        "relate",
        "write",
        "delete",
        "create_access_to",
        "create_access_from"
      ]
    },
    "errors": {
      "access denied:idA": {
        "text": "idA: user has no right to see access from",
        "code": "403"
      },
      "access denied:idB": {
        "text": "idB: user has no right to see access to",
        "code": "403"
      },
      "not found:idA": {
        "text": "idA: node not found",
        "code": "404"
      },
      "not found:idB": {
        "text": "idB: node not found",
        "code": "404"
      },
      "invalid parameter:user": {
        "text": "user: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:idA": {
        "text": "idA: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:idB": {
        "text": "idB: must be a positive integer",
        "code": "422"
      }
    }
  },
  "editAccess": {
    "path": "/access",
    "method": "post",
    "arguments": [
      {
        "in": "query",
        "name": "user"
      },
      {
        "in": "query",
        "name": "idA"
      },
      {
        "in": "query",
        "name": "idB"
      },
      {
        "in": "query",
        "name": "rights"
      }
    ],
    "constants": {
      "rights": [
        "read",
        "relate",
        "write",
        "delete",
        "create_access_to",
        "create_access_from"
      ]
    },
    "errors": {
      "access denied:idA": {
        "text": "idA: user has no right to create access from",
        "code": "403"
      },
      "access denied:idB": {
        "text": "idB: user has no right to create access to",
        "code": "403"
      },
      "not found:idA": {
        "text": "idA: node not found",
        "code": "404"
      },
      "not found:idB": {
        "text": "idB: node not found",
        "code": "404"
      },
      "invalid parameter:user": {
        "text": "user: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:idA": {
        "text": "idA: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:idB": {
        "text": "idB: must be a positive integer",
        "code": "422"
      },
      "invalid parameter:rights": {
        "text": "rights: must be not negative integer",
        "code": "422"
      }
    }
  }
}
